package com.nonFirstRepatable.in;

import java.util.HashMap;

public class Nonrepeatable{
    public static char findFirstNonRepeatingCharacter(String s) {
        // Create a map to store character counts
        HashMap<Character, Integer> charCount = new HashMap<>();
        
        // Count each character's occurrences
        for (char c : s.toCharArray()) {
            if (charCount.containsKey(c)) {
                charCount.put(c, charCount.get(c) + 1);
            } else {
                charCount.put(c, 1);
            }
        }
        
        // Find the first character that appears only once
        for (char c : s.toCharArray()) {
            if (charCount.get(c) == 1) {
                return c; // Return the first non-repeating character
            }
        }
        
        // If no unique character is found, return a placeholder character
        return '\0'; // '\0' indicates no non-repeating character
    }

    public static void main(String[] args) {
        String[] testStrings = {"swiss", "programming", "aabbcc", "abcabc", ""};
        
        for (String str : testStrings) {
            char result = findFirstNonRepeatingCharacter(str);
            if (result != '\0') {
                System.out.println("For string \"" + str + "\", the first non-repeating character is: " + result);
            } else {
                System.out.println("For string \"" + str + "\", no non-repeating character found.");
            }
        }
    }
}
